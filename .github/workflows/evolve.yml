name: evolve
on:
  push:
    branches: [ main ]
  workflow_dispatch:

#————————————————————————————————————————
# Secrets you already created in Settings ▸ Secrets & Variables ▸ Actions
#  QC_USER_ID    – from `lean whoami`
#  QC_API_TOKEN  – API token (Lab ▸ My Account ▸ Security)
#  QC_PROJECT_ID – number at end of project URL
#  GCP_SA_KEY    – only if your scripts write to Firestore
#————————————————————————————————————————
env:
  NUM_CHILDREN: 1
  QC_USER_ID:    ${{ secrets.QC_USER_ID }}
  QC_API_TOKEN:  ${{ secrets.QC_API_TOKEN }}
  QC_PROJECT_ID: ${{ secrets.QC_PROJECT_ID }}
  GCP_SA_KEY:    ${{ secrets.GCP_SA_KEY }}

jobs:
  evolve:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣  Repo
      - name: Check out source
        uses: actions/checkout@v4

      # 2️⃣  Python toolchain
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # 3️⃣  Dependencies + Lean CLI (pin to version with old flags)
      - name: Install requirements & Lean CLI
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install "lean==1.0.180"    # supports --wait / --json

      # 4️⃣  First-run bootstrap (creates lean.json & folders)
      - name: Initialise Lean project skeleton
        run: |
          if [ ! -f lean.json ]; then
            # non-interactive quick init
            lean init -y           # creates data-folder & default config
          fi

      # 5️⃣  Authenticate to QuantConnect
      - name: Lean login
        run: |
          lean login --user-id "$QC_USER_ID" --api-token "$QC_API_TOKEN"

      # 6️⃣  Generate 1 child algorithm
      - name: Generate child algorithm
        run: python algo_gen.py --num "$NUM_CHILDREN"

      # 7️⃣  Run back-test (your existing helper script)
      - name: Run back-test
        run: python run_backtest.py

      # 8️⃣  Pick the winner / push results
      - name: Select best result
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GCP_SA_KEY }}
        run: python select_winner.py
