name: evolve
on:
  push:
    branches: [ main ]          # run on every commit to main
  workflow_dispatch:            # …and allow manual runs from the Actions tab

# ————————————————————————————————————————
# All secrets are pulled from your repo settings
#   • QC_USER_ID       – numeric ID from `lean whoami`
#   • QC_API_TOKEN     – API token from Lab ▸ My Account ▸ Security ▸ API
#   • QC_PROJECT_ID    – number at the end of your project’s URL
#   • (GCP_SA_KEY)     – only needed if run_backtest.py writes to Firestore
# ————————————————————————————————————————
env:
  NUM_CHILDREN: 1
  QC_USER_ID:    ${{ secrets.QC_USER_ID }}
  QC_API_TOKEN:  ${{ secrets.QC_API_TOKEN }}
  QC_PROJECT_ID: ${{ secrets.QC_PROJECT_ID }}
  GCP_SA_KEY:    ${{ secrets.GCP_SA_KEY }}

jobs:
  evolve:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣  Get the repo
      - name: Check out source
        uses: actions/checkout@v4

      # 2️⃣  Python toolchain
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # 3️⃣  Dependencies (pin Lean CLI to a version that still has --wait / --json)
      - name: Install requirements & Lean CLI
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install "lean==1.0.180"   # ⇦ keep scripts working with --wait/--json

      # 4️⃣  Authenticate to QuantConnect
      - name: Lean login
        run: |
          lean login --user-id "$QC_USER_ID" --api-token "$QC_API_TOKEN"

      # 5️⃣  Make sure the Lean project skeleton exists (safe no-op if already there)
      - name: Initialise lean.json (first run only)
        run: |
          if [ ! -f lean.json ]; then
            lean init
          fi

      # 6️⃣  Create one child algorithm
      - name: Generate child algorithm
        run: python algo_gen.py --num "$NUM_CHILDREN"

      # 7️⃣  Back-test it (uses the older CLI flags that your scripts expect)
      - name: Run back-test
        run: python run_backtest.py

      # 8️⃣  Pick the winner / post-process results
      - name: Select best result
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GCP_SA_KEY }}
        run: python select_winner.py
