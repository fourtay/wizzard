# ──────────────────────────────────────────────────────────
#  GitHub Actions – generate child algos and push a branch
# ──────────────────────────────────────────────────────────
name: evolve-and-branch

on:
  # run every 30 min
  schedule:
    - cron: "*/30 * * * *"

  # manual trigger with optional override
  workflow_dispatch:
    inputs:
      num_children:
        description: "How many algos to generate"
        default: "5"
        required: false

jobs:
  evolve:
    runs-on: ubuntu-latest

    # Fallback: use the input value if provided, else 5
    env:
      NUM_CHILDREN: ${{ github.event.inputs.num_children || '5' }}

    steps:
      # 1 ─ checkout full history so we can create a new branch
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2 ─ python runtime
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 3 ─ install any local deps (optional; silent-fail if file absent)
      - name: Install deps (optional)
        run: |
          test -f requirements.txt && pip install --quiet -r requirements.txt || true

      # 4 ─ generate child algos
      - name: Run algogen
        run: |
          echo "⚙️  Generating $NUM_CHILDREN child algos…"
          python wizard/algogen.py

      # 5 ─ commit + push to a new branch
      - name: Commit and push branch
        id: branch
        run: |
          BRANCH="evolve-$(date +'%Y%m%d%H%M%S')"
          git checkout -b "$BRANCH"
          git add wizard/out
          git commit -m "auto: add $NUM_CHILDREN child algos"
          git push origin "$BRANCH"
          echo "branch=$BRANCH" >> "$GITHUB_OUTPUT"
          echo "📤  Pushed $BRANCH"

      # 6 ─ notify the back-test workflow
      - name: Dispatch back-test job
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: backtest-branch
          client-payload: '{"branch":"${{ steps.branch.outputs.branch }}"}'
