name: evolve

# ─── 1. WHEN TO RUN ────────────────────────────────────────────────────────────
on:
  push:
    branches: [ main ]
  workflow_dispatch:

# ─── 2. GLOBAL ENV VARS (secrets in repo-settings ▸ Actions) ───────────────────
env:
  NUM_CHILDREN: 1
  QC_USER_ID:   ${{ secrets.QC_USER_ID }}
  QC_API_TOKEN: ${{ secrets.QC_API_TOKEN }}
  QC_ORG_ID:    ${{ secrets.QC_ORG_ID }}    # ← NEW, you added this secret
  GCP_SA_KEY:   ${{ secrets.GCP_SA_KEY }}

# ─── 3. JOB ────────────────────────────────────────────────────────────────────
jobs:
  evolve:
    runs-on: ubuntu-latest

    steps:
    # ── checkout & python ──────────────────────────────────────────────────────
    - name: Check out source
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install requirements + Lean CLI
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install "lean==1.0.219"

    # ── fresh Lean root each run ───────────────────────────────────────────────
    - name: Prepare Lean root
      run: |
        rm -rf qc_root             # start totally clean
        mkdir  qc_root
        cd     qc_root

        # initialise a brand-new Lean config bound to your organisation
        lean init --organization-id "$QC_ORG_ID" --yes

        # authenticate
        lean login --user-id "$QC_USER_ID" --api-token "$QC_API_TOKEN"

    # ── run helper scripts inside qc_root ──────────────────────────────────────
    - name: Generate child algorithm
      run: |
        cd qc_root
        python ../algo_gen.py --num "$NUM_CHILDREN"

    - name: Run back-test
      run: |
        cd qc_root
        python ../run_backtest.py

    - name: Select best result
      env:
        GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GCP_SA_KEY }}
      run: |
        cd qc_root
        python ../select_winner.py
