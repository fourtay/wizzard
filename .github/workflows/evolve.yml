# ──────────────────────────────────────────────────────────────────────────────
#  GitHub Actions – Evolution Loop
#  ──────────────────────────────────────────────────────────────────────────────
#  1. generate-children   ─→ create NUM_CHILDREN mutated algos (tools/algo_gen.py)
#  2. backtest-child      ─→ push each child to QC Cloud, run back-test, save JSON
#  3. select-champion     ─→ read Firestore ➜ pick best performer, save champion
#
#    • NUM_CHILDREN, MUTATION_RATE drive exploration depth
#    • QC_PROJECT_ID is your QuantConnect cloud project
#    • GCP_SA_KEY (secret) lets the job write results to Firestore
# ──────────────────────────────────────────────────────────────────────────────

name: evolve

on:
  workflow_dispatch:          # manual trigger button
  schedule:
    - cron: "*/30 * * * *"    # every 30 min (adjust if you like)

env:
  NUM_CHILDREN:      5              # number of offspring per generation
  MUTATION_RATE:     0.20           # 0-1  (20 % of params mutate)
  QC_PROJECT_ID:     23708106       # your QuantConnect cloud project
  PYTHON_VERSION:    "3.10"

jobs:
# ────────────────────────────────────────────────────────────────────────────
#  JOB 1 ▸ generate-children
# ────────────────────────────────────────────────────────────────────────────
  generate-children:
    runs-on: ubuntu-latest
    outputs:
      child_matrix: ${{ steps.matrix.outcome }}
    steps:
      - name: ⬇️  Checkout repo
        uses: actions/checkout@v3

      - name: 🐍  Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 🧬  Generate mutated children
        run: |
          python tools/algo_gen.py \
            --num        "${NUM_CHILDREN}" \
            --mutation   "${MUTATION_RATE}"
          ls -1 children

      - name: 🔢  Build matrix for next job
        id: matrix
        run: |
          list=$(ls children | jq -R -s -c 'split("\n")[:-1] | map({"child": .})')
          echo "outcome=$list" >> "$GITHUB_OUTPUT"

      - name: 📦  Upload children artifact
        uses: actions/upload-artifact@v3
        with:
          name: children
          path: children/

# ────────────────────────────────────────────────────────────────────────────
#  JOB 2 ▸ backtest each child (matrix)
# ────────────────────────────────────────────────────────────────────────────
  backtest-child:
    needs: generate-children
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.generate-children.outputs.child_matrix) }}

    steps:
      - uses: actions/checkout@v3

      - name: 📥  Download child file
        uses: actions/download-artifact@v3
        with:
          name: children
          path: children

      - name: ⚙️  Install Lean CLI
        run: pip install lean==1.1.143

      - name: 🚀  Push & back-test in QC Cloud
        run: |
          CHILD="children/${{ matrix.child }}"
          lean cloud push "$CHILD" --project $QC_PROJECT_ID
          NAME=$(basename "$CHILD" .py)
          lean cloud backtest $QC_PROJECT_ID \
               --name "$NAME" \
               --output backtest-results.json

      - name: 🔑  Write GCP key
        run: echo "${{ secrets.GCP_SA_KEY }}" > gcp_key.json

      - name: 🗃  Store results in Firestore
        run: python tools/store_results.py
        env:
          BACKTEST_ID: ${{ matrix.child }}
          GCP_SA_KEY:  ${{ secrets.GCP_SA_KEY }}

# ────────────────────────────────────────────────────────────────────────────
#  JOB 3 ▸ select-champion
# ────────────────────────────────────────────────────────────────────────────
  select-champion:
    needs: backtest-child
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: 🐍  Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 🔑  Write GCP key
        run: echo "${{ secrets.GCP_SA_KEY }}" > gcp_key.json

      - name: 🏆  Pick best back-test & save DNA
        run: python tools/select_champion.py

      - name: 📤  Commit champion DNA
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ci: update champion DNA"
          file_pattern: champion.json
