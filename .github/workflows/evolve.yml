name: evolve
on:
  push:
    branches: [ main ]
  workflow_dispatch:

# ────────────── repository-wide env vars ──────────────
env:
  NUM_CHILDREN: 1
  QC_USER_ID:    ${{ secrets.QC_USER_ID }}
  QC_API_TOKEN:  ${{ secrets.QC_API_TOKEN }}
  QC_PROJECT_ID: ${{ secrets.QC_PROJECT_ID }}
  QC_ORG_ID:     ${{ secrets.QC_ORG_ID }}   # ← add this secret in Settings ▸ Actions ▸ Secrets
  GCP_SA_KEY:    ${{ secrets.GCP_SA_KEY }}

jobs:
  evolve:
    runs-on: ubuntu-latest

    steps:
    # ─────────────── source checkout ───────────────
    - name: Check out source
      uses: actions/checkout@v4

    # ─────────────── Python runtime ────────────────
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    # ─────────────── deps + Lean CLI ───────────────
    - name: Install requirements & Lean CLI
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install --upgrade lean           # always newest CLI

    # ─────────────── Lean root config ──────────────
    - name: Prepare fresh Lean root
      run: |
        rm -f lean.json                     # scrub any legacy config
        rm -rf data-folder .local || true   # scrub old folders

        # write a minimal, non-interactive config
        cat > lean.json <<EOF
        {
          "organization": "${QC_ORG_ID}",
          "default-language": "python"
        }
        EOF

    # ─────────────── QuantConnect login ────────────
    - name: Lean login
      run: |
        lean login --user-id "$QC_USER_ID" --api-token "$QC_API_TOKEN"

    # ─────────────── generate & test ───────────────
    - name: Generate child algorithm
      run: python algo_gen.py --num "$NUM_CHILDREN"

    - name: Run back-test
      run: python run_backtest.py

    - name: Select best result
      env:
        GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GCP_SA_KEY }}
      run: python select_winner.py
