#  .github/workflows/evolve.yml
#  ───────────────────────────
#  Fires every 30 min (or on-demand) → generates N child algos,
#  commits them, runs a Lean Cloud back-test, then writes the
#  results JSON to Firestore.

name: evolve

# ─── Triggers ──────────────────────────────────────────────────────
on:
  workflow_dispatch:            # run manually from the Actions tab
  schedule:
    - cron: '*/30 * * * *'      # every 30 minutes (UTC)

# ─── Global env vars (edit if you like) ────────────────────────────
env:
  PYTHON_VERSION: '3.10'
  NUM_CHILDREN: '5'             # children per generation
  QC_PROJECT_ID: ${{ secrets.QC_PROJECT_ID }}
  QC_API_TOKEN:  ${{ secrets.QC_API_TOKEN }}

# ─── One-job pipeline ──────────────────────────────────────────────
jobs:
  evolve:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    # 1️⃣  Check out repo
    - uses: actions/checkout@v4

    # 2️⃣  Set up Python
    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    # 3️⃣  Install deps
    - name: Install Python requirements
      run: |
        pip install -r requirements.txt
        pip install lean-cli==1.0.215  # pin a known-good Lean CLI

    # 4️⃣  Generate new strategies
    - name: Generate ${{ env.NUM_CHILDREN }} child algos
      run: |
        python tools/algogen/evolve.py --num_children $NUM_CHILDREN

    # 5️⃣  Commit & push any new files
    - name: Commit offspring to repo
      run: |
        git config --global user.name  "evolve-bot"
        git config --global user.email "actions@github.com"
        git add .
        git commit -m "genetic-run: $(date -u +'%Y-%m-%dT%H:%M:%SZ')" || echo "nothing to commit"
        git push || echo "nothing to push"

    # 6️⃣  Compile & back-test in Lean Cloud, store JSON in Firestore
    - name: Back-test each new algo & store results
      env:
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
      run: |
        python tools/algogen/backtest_and_store.py \
          --project_id $QC_PROJECT_ID \
          --qc_token  $QC_API_TOKEN \
          --children  $NUM_CHILDREN
