name: evolve
on:
  workflow_dispatch:
  schedule:
    # every 30 min – adjust if you need longer QC queues
    - cron: "*/30 * * * *"

jobs:
  evolve:
    runs-on: ubuntu-latest
    env:
      # ---------- user-controlled knobs ----------
      NUM_CHILDREN: "5"           # how many algos per round
      NUM_SURVIVORS: "2"          # how many winners keep breeding
      PROJECT_ID: "23708106"      # ← your QC project ID
      BACKTEST_COLLECTION: "backtest_results"  # Firestore collection
    steps:

      ## 1️⃣  checkout repo
      - uses: actions/checkout@v4

      ## 2️⃣  set up Python & Lean CLI
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install deps
        run: |
          pip install quantconnect-lean google-cloud-firestore

      ## 3️⃣  generate children
      - name: Generate new algos
        run: |
          python wizard/algo_gen.py --num "${{ env.NUM_CHILDREN }}"

      ## 4️⃣  run cloud back-tests
      - name: Launch backtests on QC
        env:
          QC_API_TOKEN: ${{ secrets.QC_API_TOKEN }}
        run: |
          python wizard/run_backtests.py

      ## 5️⃣  wait for completion (poll QC)
      - name: Wait for backtests to finish
        env:
          QC_API_TOKEN: ${{ secrets.QC_API_TOKEN }}
        run: |
          python wizard/wait_backtests.py

      ## 6️⃣  select survivors + push stats to Firestore
      - name: Pick winners & upload stats
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
          NUM_SURVIVORS: ${{ env.NUM_SURVIVORS }}
          BACKTEST_COLLECTION: ${{ env.BACKTEST_COLLECTION }}
        run: |
          python wizard/select_survivors.py

      ## 7️⃣  persist run artefacts
      - name: Upload children & logs
        uses: actions/upload-artifact@v4
        with:
          name: evolve-${{ github.run_id }}
          path: |
            wizard/children/
            wizard/backtests.json
            parents.txt
