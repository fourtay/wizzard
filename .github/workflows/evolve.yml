# .github/workflows/evolve.yml
name: evolve

on:
  workflow_dispatch:
  schedule:
    # every 10 minutes
    - cron: "*/10 * * * *"

env:
  NUM_CHILDREN: 5
  MUTATION_RATE: 0.2
  CHAMPION_BRANCH: champion
  PYTHON_VERSION: "3.10"

jobs:
  evolve:
    runs-on: ubuntu-latest

    steps:
      - name: üßπ  Checkout repo
        uses: actions/checkout@v4

      - name: üêç  Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # 1Ô∏è‚É£  Generate a new candidate algorithm ---------------------------------
      - name: ‚ú®  Generate candidate
        run: |
          python scripts/algo_gen.py \
            --children $NUM_CHILDREN \
            --mutation $MUTATION_RATE
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      # 2Ô∏è‚É£  Commit it back on a temp branch ------------------------------------
      - name: üì§  Commit candidate
        run: |
          BRANCH="candidate-$(date +%s)"
          git switch -c "$BRANCH"
          git add algorithms/
          git commit -m "ü§ñ new candidate"
          git push origin "$BRANCH"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 3Ô∏è‚É£  Run backtest + store results --------------------------------------
      - name: üöÄ  Run backtest
        run: |
          lean cloud backtest "algorithms/candidate.py" --output backtest-results.json

      - name: üóÑÔ∏è  Store results in Firestore
        run: python scripts/store_results.py
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
          BACKTEST_ID: ${{ github.run_id }}

      # 4Ô∏è‚É£  Evaluate and (maybe) promote --------------------------------------
      - name: üèÜ  Evaluate vs champion
        run: python scripts/evaluate.py
        env:
          FIRESTORE_PROJECT: "YOUR_GCP_PROJECT_ID"

      - name: ‚¨ÜÔ∏è  Promote new champion if better
        if: success() && steps.evaluate.outputs.promote == 'true'
        run: |
          git switch ${{ env.CHAMPION_BRANCH }}
          git merge --no-ff "$BRANCH" -m "üèÜ promote new champion"
          git push origin ${{ env.CHAMPION_BRANCH }}
