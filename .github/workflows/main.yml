name: Run Automated QuantConnect Backtest

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  run-and-store-backtest:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout Repository Code
        uses: actions/checkout@v4

      - name: 2. Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 3. Install All Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install lean
          pip install -r requirements.txt

      - name: 4. Authenticate LEAN CLI
        run: |
          lean login --user-id ${{ secrets.QC_USER_ID }} --api-token ${{ secrets.QC_API_TOKEN }}

      - name: 5. Initialize LEAN Workspace
        run: |
          yes | lean init --language python

      - name: 6. Run Cloud Backtest and Capture Backtest ID
        id: run_backtest
        run: |
          echo "Running backtest..."
          BACKTEST_OUTPUT=$(lean cloud backtest "23708106")
          echo "==== FULL BACKTEST OUTPUT ===="
          echo "$BACKTEST_OUTPUT"

          # Extract Backtest ID from "Backtest id: <ID>" line
          BACKTEST_ID=$(echo "$BACKTEST_OUTPUT" | grep -i "Backtest id:" | awk '{print $3}')
          echo "Extracted BACKTEST_ID=$BACKTEST_ID"

          echo "BACKTEST_ID=$BACKTEST_ID" >> $GITHUB_ENV

      - name: 7. Download Backtest Results via API
        env:
          QC_USER_ID: ${{ secrets.QC_USER_ID }}
          QC_API_TOKEN: ${{ secrets.QC_API_TOKEN }}
          BACKTEST_ID: ${{ env.BACKTEST_ID }}
        run: python download_results.py

      - name: 8. Store Results in Firestore
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: python store_results.py
