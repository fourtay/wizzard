# ──────────────────────────────────────────────────────────
#  GitHub Actions – back-test a branch & store the results
# ──────────────────────────────────────────────────────────
name: run-and-store-backtest

on:
  # called from the evolve workflow
  repository_dispatch:
    types: [backtest-branch]

jobs:
  backtest:
    runs-on: ubuntu-latest

    # the branch name is sent in the client-payload
    env:
      TARGET_BRANCH: ${{ github.event.client_payload.branch }}
      QC_PROJECT_ID: "23708106"             # ← your QuantConnect project ID
      GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }} # already set up
      QC_API_TOKEN: ${{ secrets.QC_API_TOKEN }} # QuantConnect user token
      # Lean stores compile/back-test output here
      BACKTEST_JSON: backtest-results.json

    steps:
      # 1 ─ check out the branch we were told about
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.TARGET_BRANCH }}
          fetch-depth: 0

      # 2 ─ Python & Lean CLI
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Lean CLI
        run: |
          pip install --quiet lean-cli

      # 3 ─ Kick off the compile + back-test (Lean waits by default)
      - name: Run Lean Cloud back-test
        id: lean
        run: |
          echo "▶️  Compiling & back-testing $TARGET_BRANCH …"
          lean cloud backtest "$QC_PROJECT_ID" \
            --name "auto:${TARGET_BRANCH}" \
            --output "$BACKTEST_JSON"

      # 4 ─ Dump the file so we can see it in the log
      - name: Show JSON (debug)
        run: |
          echo "==== BACKTEST JSON (first 200 lines) ===="
          head -200 "$BACKTEST_JSON" || true
          echo "========================================="

      # 5 ─ Store results in Firestore
      - name: Upload to Firestore
        run: |
          python wizard/store_results.py
        env:
          BACKTEST_ID: ${{ env.TARGET_BRANCH }}

      # 6 ─ Success message
      - name: Finished
        if: success()
        run: |
          echo "🏁  Back-test complete & results stored for $TARGET_BRANCH"
